[project]
name = "modal-chat"
version = "0.1.0"
description = "Run vLLM servers on Modal and talk to them with Textual"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "modal>=1.1.1",
    "openai>=1.99.1",
    "textual>=5.2.0",
]

[dependency-groups]
dev = [
    "ruff>=0.12.7",
]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.12
target-version = "py312"

[tool.ruff.lint]
# Enable all rules
select = ["ALL"]

# Disable specific rules that are often too strict or conflict with common practices
ignore = [
    "ANN101",   # Missing type annotation for `self` in method
    "ANN102",   # Missing type annotation for `cls` in classmethod
    "ANN401",   # Dynamically typed expressions (typing.Any) are disallowed
    "BLE001",   # Do not catch blind exception: `Exception`
    "C901",     # Function is too complex
    "COM812",   # Trailing comma missing (conflicts with formatter)
    "D100",     # Missing docstring in public module
    "D101",     # Missing docstring in public class
    "D102",     # Missing docstring in public method
    "D103",     # Missing docstring in public function
    "D104",     # Missing docstring in public package
    "D105",     # Missing docstring in magic method
    "D107",     # Missing docstring in `__init__`
    "D203",     # 1 blank line required before class docstring (conflicts with D211)
    "D213",     # Multi-line docstring summary should start at the second line (conflicts with D212)
    "E501",     # Line too long (handled by formatter)
    "ERA001",   # Found commented-out code
    "FBT001",   # Boolean-typed positional argument in function definition
    "FBT002",   # Boolean default positional argument in function definition
    "ISC001",   # Implicitly concatenated string literals on one line (conflicts with formatter)
    "PLR0912",  # Too many branches
    "PLR0913",  # Too many arguments to function call
    "PLR2004",  # Magic value used in comparison
    "PT028",    # Test function parameter has default argument
    "PTH123",   # `open()` should be replaced by `Path.open()`
    "S101",     # Use of `assert` detected
    "S104",     # Possible binding to all interfaces
    "S602",     # `subprocess` call with `shell=True` identified, security issue
    "T201",     # `print` found
    "T203",     # `pprint` found
    "RUF012",
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"
